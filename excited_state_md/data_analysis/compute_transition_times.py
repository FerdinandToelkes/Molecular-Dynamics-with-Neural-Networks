import argparse
import os
import numpy as np

from ground_state_md.setup_logger import setup_logger
from ground_state_md.utils import set_data_prefix

from excited_state_md.preprocessing.utils import read_last_excited_cycles, prepare_last_excited_cycles


logger = setup_logger(logging_level_str="info")

# Example command to run the script from within code directory:
"""
python3 -m excited_state_md.data_analysis.compute_transition_times --trajectory_dir PREPARE_12
"""


def parse_args() -> dict:
    """ 
    Parse command-line arguments. 
    Returns:
        dict: Dictionary containing command-line arguments.
    """
    parser = argparse.ArgumentParser(description="Script for computing transition times from excited state MD data")
    parser.add_argument("--trajectory_dir", type=str, default="PREPARE_12", help="Directory containing the trajectory data generated by Turbomole (default: PREPARE_12)")
    parser.add_argument("--computed_cycles", type=int, default=1461, help="Number of cycles for which the gradients were computed (default: 1461)")
    return vars(parser.parse_args())


def compute_mean_transition_cycle_with_std_error(last_excited_cycles: dict) -> tuple[float, float]:
    """Compute the mean transition cycle from the last excited cycles.
    Args:
        last_excited_cycles (dict): Dictionary with keys as geometry directories and values as the last excited cycle number.
    Returns:
        tuple: Mean transition cycle and standard error of the mean.
    """
    mean = np.mean(list(last_excited_cycles.values()))
    std_err = np.std(list(last_excited_cycles.values())) / np.sqrt(len(last_excited_cycles))
    logger.info(f"Mean transition cycle: {mean:.2f} +/- {std_err:.2f}")
    return mean, std_err


def main(trajectory_dir: str, computed_cycles: int):
    # setup
    data_path = os.path.join(set_data_prefix(), trajectory_dir)

    all_last_excited_cycles = read_last_excited_cycles(data_path)
    logger.debug(f"Last excited cycles: {all_last_excited_cycles}")

    compute_mean_transition_cycle_with_std_error(all_last_excited_cycles)

    valid_last_excited_cycles = prepare_last_excited_cycles(data_path, computed_cycles)
    logger.debug(f"Valid last excited cycles: {valid_last_excited_cycles}")
    compute_mean_transition_cycle_with_std_error(valid_last_excited_cycles)

    # Easy split into train, validation, and test sets
    train_last_excited_cycles = {k: v for idx, (k, v) in enumerate(valid_last_excited_cycles.items()) if idx < 25}
    val_last_excited_cycles = {k: v for idx, (k, v) in enumerate(valid_last_excited_cycles.items()) if idx >= 25 and idx < 25 + 3}
    test_last_excited_cycles = {k: v for idx, (k, v) in enumerate(valid_last_excited_cycles.items()) if idx >= 25+3}

    logger.info(f"Computing mean transition cycle for train set with {len(train_last_excited_cycles)} entries")
    compute_mean_transition_cycle_with_std_error(train_last_excited_cycles)
    logger.info(f"Computing mean transition cycle for validation set with {len(val_last_excited_cycles)} entries")
    compute_mean_transition_cycle_with_std_error(val_last_excited_cycles)
    logger.info(f"Computing mean transition cycle for test set with {len(test_last_excited_cycles)} entries")
    compute_mean_transition_cycle_with_std_error(test_last_excited_cycles)

    # shuffle the directories before splitting
    np.random.seed(42)  # for reproducibility
    shuffled_keys = list(valid_last_excited_cycles.keys())
    np.random.shuffle(shuffled_keys)
    
    train_last_excited_cycles = {k: valid_last_excited_cycles[k] for k in shuffled_keys[:25]}
    val_last_excited_cycles = {k: valid_last_excited_cycles[k] for k in shuffled_keys[25:28]}
    test_last_excited_cycles = {k: valid_last_excited_cycles[k] for k in shuffled_keys[28:]}

    logger.info(f"Computing mean transition cycle for shuffled train set with {len(train_last_excited_cycles)} entries")
    compute_mean_transition_cycle_with_std_error(train_last_excited_cycles)
    logger.info(f"Computing mean transition cycle for shuffled validation set with {len(val_last_excited_cycles)} entries")
    compute_mean_transition_cycle_with_std_error(val_last_excited_cycles)
    logger.info(f"Computing mean transition cycle for shuffled test set with {len(test_last_excited_cycles)} entries")
    compute_mean_transition_cycle_with_std_error(test_last_excited_cycles)

    
    

    


if __name__=="__main__":
    args = parse_args()
    main(**args)

# Output from script
# 2025-08-04 - excited_state_md.preprocessing.utils - INFO - Number of generally valid trajectories: 71
# 2025-08-04 - __main__ - INFO - Mean transition cycle: 1060.54 +/- 74.84
# 2025-08-04 - excited_state_md.preprocessing.utils - INFO - Number of trajectories after deleting cycles larger than 1461: 61
# 2025-08-04 - excited_state_md.preprocessing.utils - INFO - Number of trajectories after deleting missing files and invalid cycles: 53
# 2025-08-04 - __main__ - INFO - Mean transition cycle: 866.55 +/- 56.17

# Output from script without shuffling the directories when splitting into train, validation, and test sets:
# 2025-08-04 - __main__ - INFO - Computing mean transition cycle for train set with 25 entries
# 2025-08-04 - __main__ - INFO - Mean transition cycle: 937.64 +/- 86.13
# 2025-08-04 - __main__ - INFO - Computing mean transition cycle for validation set with 3 entries
# 2025-08-04 - __main__ - INFO - Mean transition cycle: 967.33 +/- 51.47
# 2025-08-04 - __main__ - INFO - Computing mean transition cycle for test set with 25 entries
# 2025-08-04 - __main__ - INFO - Mean transition cycle: 783.36 +/- 78.73

# Output from script with shuffling the directories before splitting into train, validation, and test sets:
# 2025-08-04 - __main__ - INFO - Computing mean transition cycle for shuffled train set with 25 entries
# 2025-08-04 - __main__ - INFO - Mean transition cycle: 890.76 +/- 75.46
# 2025-08-04 - __main__ - INFO - Computing mean transition cycle for shuffled validation set with 3 entries
# 2025-08-04 - __main__ - INFO - Mean transition cycle: 1148.00 +/- 124.75
# 2025-08-04 - __main__ - INFO - Computing mean transition cycle for shuffled test set with 25 entries
# 2025-08-04 - __main__ - INFO - Mean transition cycle: 808.56 +/- 87.90